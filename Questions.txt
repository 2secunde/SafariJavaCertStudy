Q) Which are legal:

A) class X {
    var x = 99;
  }

B) void doStuff(var x) { }

C) void doStuff() {
    var x;
    x = 100;
  }

D) void doStuff() {
    var x = 100;
  }

E) void doStuff() {
    var x = null;
  }

Q) Which are legal:

A) for (var x = 0; x < 3; x++)
   System.out.println(x);

B) try (var in = new FileReader("");
       var out = new FileWriter("")) {
  }

C) try (FileReader in = new FileReader("")) {
  } catch (var ex) { }

D) void doStuff() {
    var x = new int[]{ 1, 2, 3 };
  }

E) void doStuff() {
    var x = { 1, 2, 3 };
  }

Q) Given:

    String message = """Hello\
    Java 17 World!""";
    System.out.println(message + "XXX");

What is the result?
A) Compilation fails
B) Exception at runtime
C) Hello
   Java 17 World!XXX
D) Hello Java 17 World!XXX
E) Hello Java 17 World!
   XXX

Q) Given:

int x = -1;
System.out.println(x & 5);

What is the result?
A) Compilation fails
B) Exception at runtime
C) -1
D) 0x00000005
E) 5

Q) Which print "true"
A) String s = "Hello";
   String t = "He";
   t += "llo";
   sout(s == t);

B) String s = "Hello";
   String t = "He";
   t += "llo";
   sout(s.equals(t));

C) StringBuilder s = new StringBuilder("Hello");
   StringBuilder t = new StringBuilder("He");
   t.append("llo");
   sout(s.equals(t));

D) List<String> ls = List.of("Fred", "Jim");
   List<String> ls2 = new ArrayList<>(ls);
   sout(ls.equals(ls2));

E) LocalDate ld = LocalDate.of(2021, 3, 29);
   LocalDate ld2 = LocalDate.of(2021, 3, 29);
   sout(ld.equals(ld2));

Q) Given:
     public static void funct(int x) {
       x = x + 1;
     }

and:
     public static void main(String[] args) {
       int x = 99;
       funct(x);
       System.out.println(x);
     }

     What is the result?
     A) 99
     B) 100
     C) An error

Q)  given:
  public static void q13A(int[] x) {
    x[0] = x[0] + 1;
  }
and:
  public static void main(String[] args) {
    int x[] = {99};
    q13A(x);
    System.out.println(x[0]);
  }

  What is the result?
  A) 99
  B) 100
  C) An error

Q) Given:
  public static void q14A(Integer x) {
    x = x + 1;
  }

and:
  public static void main(String[] args) {
    Integer x = 99;
    q14A(x);
    System.out.println(x);
  }

  What is the result?
  A) 99
  B) 100
  C) An error

Q)
Given
  class Thing {
    int x = 99;

    static void showIt() {
      int x = 98;
      System.out.println("x is " + x);
    }
  }

What is the effect of:
  Thing.showIt();

  A) Compilation fails
  B) Exception
  C) 99
  D) 98

Q) Given:
  class Base {
    void doBaseStuff() { System.out.println("doBaseStuff"); }
  }

  class Sub extends Base {
    void doBaseStuff() { System.out.println("doSubStuff"); }
    void doOtherStuff() { System.out.println("doOtherStuff"); }
  }
and:
    Base b = new Sub();
//    b.doOtherStuff(); this would be compilation failure Bases do not have other stuff!
//    ((Sub)b).doOtherStuff(); this would succeed
    ((Runnable) b).run();

  What is the result?
  A) doSubStuff
  B) doOtherStuff
  C) doBaseStuff
  D) Exception at runtime
  E) Compilation failure

Q)
Given:
    Object obj = "Hello";
    boolean answered = false;
    if (obj instanceof String) {
      String str = (String)obj;
      if (str.length() > 3) {
        System.out.println(str);
        answered = true;
      }
    }
    if (!answered) System.out.println("Nope");

    Which replace the if clause to produce the same output?
A)    System.out.println(obj instanceof String str && str.length() > 3 ? str : "Nope");
B)    if (obj instanceof String str when str.length() > 3) System.out.println(str);
      else System.out.println("Nope");
C)    if (obj instanceof String str if str.length() > 3) System.out.println(str);
      else System.out.println("Nope");
D)    System.out.println(obj instanceof String.class str && str.length() > 3 ? str : "Nope");
E)    if (!(obj instanceof String str) || str.length() <= 3) System.out.println("Nope");
      else System.out.println(str);

Q)
Which print true?
  Iterable<String> is = List.of("a", "b", "c");
  Object obj = is;

A) System.out.println(is instanceof List);
B) System.out.println(obj instanceof List l && l.size() > 2);
C) System.out.println(obj instanceof List<String> ls);
D) System.out.println(is instanceof Collection<? extends CharSequence> cs);
OR!) System.out.println(is instanceof Collection<String> cs);
E) System.out.println(is instanceof List<String> ls || ls.size() > 2);

